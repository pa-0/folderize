// <copyright file="Program.cs" company="PublicDomain.is">
//     CC0 1.0 Universal (CC0 1.0) - Public Domain Dedication
//     https://creativecommons.org/publicdomain/zero/1.0/legalcode
// </copyright>
// <auto-generated />
namespace Folderize
{
    // Directives
    using System;
    using System.IO;
    using System.Threading;
    using System.Windows.Forms;

    /// <summary>
    /// Class with program entry point.
    /// </summary>
    internal sealed class Program
    {
        /// <summary>
        /// The first instance mutex.
        /// </summary>
        public static Mutex FirstInstanceMutex = null;

        /// <summary>
        /// Program entry point.
        /// </summary>
        [STAThread]
        private static void Main(string[] args)
        {
            // Check arguments for context menu start
            if (args.Length > 0)
            {
                try
                {
                    // Check if "Folderize"
                    if (args.Length == 1)
                    {
                        // Set target
                        string target = args[0];

                        // Set fileinfo
                        FileInfo targetFileInfo = new FileInfo(target);

                        // Skip directories
                        if (!targetFileInfo.Attributes.HasFlag(FileAttributes.Directory))
                        {
                            // Set target directory
                            string targetDirectory = Path.Combine(targetFileInfo.DirectoryName, Path.GetFileNameWithoutExtension(target));

                            // Create directory
                            Directory.CreateDirectory(targetDirectory);

                            // Move target into it
                            File.Move(target, Path.Combine(targetDirectory, targetFileInfo.Name));
                        }
                    }
                    else
                    {
                        /*// The first instance flag
                        bool firstInstance;

                        // Set first instance mutex
                        FirstInstanceMutex = new Mutex(true, @"Local\Folderize", out firstInstance);

                        for (int i = 0; i < args.Length; i++)
                        {
                            MessageBox.Show($"{args.Length} {i}: {args[i]}");
                        }

                        // Act according to first instance
                        if (firstInstance)
                        {
                            // Release the mutex
                            FirstInstanceMutex.ReleaseMutex();
                        }*/
                    }
                }
                catch (Exception ex)
                {
                    // Log to error file
                    File.AppendAllText("Folderize-ErrorLog.txt", $"{Environment.NewLine}{Environment.NewLine}DateTime: {DateTime.UtcNow}, Args: {string.Join(",", args)}{Environment.NewLine}{ex.Message}");
                }
            }
            else // By user
            {
                Application.EnableVisualStyles();
                Application.SetCompatibleTextRenderingDefault(false);
                Application.Run(new MainForm());
            }
        }
    }
}
